{"version":3,"sources":["components/Signup.jsx","components/Login.jsx","components/Admin.jsx","components/Home.jsx","Views/AccountCreated.jsx","Views/CreatedError.jsx","App.js","reportWebVitals.js","index.js"],"names":["options","value","label","SignUp","useState","emailValid","setEmailValid","passwordValid","setPasswordValid","confirmPasswordValid","setConfirmPasswordValid","confirmPassword","setConfirmPassword","email","setEmail","firstName","setFirstName","surname","setSurname","birth","setBirth","password","setPassword","city","setCity","history","useHistory","className","onSubmit","e","fetch","method","headers","body","JSON","stringify","dateOfBirth","then","response","json","success","push","preventDefault","type","name","placeholder","required","onChange","target","htmlFor","newEmail","isEmail","test","newPasswordValid","length","disabled","Login","token","console","log","localStorage","setItem","Admin","users","setUsers","useEffect","getItem","map","user","Home","AccountCreated","to","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b124528.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {useHistory} from \"react-router\"\r\nimport Select from \"react-select\"\r\n\r\nconst options = [\r\n  {value: 'paris', label: 'Paris'},\r\n  {value: 'tokyo', label: 'Tokyo'},\r\n  {value: 'los angeles', label: 'Los Angeles'}\r\n]\r\n\r\nexport default function SignUp() {\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const [passwordValid, setPasswordValid] = useState(false);\r\n  const [confirmPasswordValid, setConfirmPasswordValid] = useState(false);\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [birth, setBirth] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\");\r\n  const [city, setCity] = useState(null)\r\n\r\n  const history = useHistory()\r\n\r\n  const addUser = (e) => {\r\n    fetch(\"http://localhost:8000/signup\",{\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password: password,\r\n        dateOfBirth: birth,\r\n        surname: surname,\r\n        firstName: firstName,\r\n        email: email,\r\n        confirmPassword: confirmPassword,\r\n        city: city.value\r\n      })\r\n    }).then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((response) => {\r\n      if (response.success === true){\r\n        history.push('/created')\r\n      }\r\n    })\r\n    e.preventDefault();\r\n    \r\n  }\r\n\r\n  const onChangeEmail = (e) => {\r\n    const newEmail = e.target.value;\r\n    const reg = /^\\S+@\\S+\\.\\S+$/g;\r\n    const isEmail = reg.test(newEmail);\r\n    setEmail(newEmail);\r\n    setEmailValid(isEmail);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    let newPasswordValid = false;\r\n    if (e.target.value.length >= 8) {\r\n      newPasswordValid = true;\r\n    } else {\r\n      newPasswordValid = false;\r\n    }\r\n    setPassword(e.target.value);\r\n    setPasswordValid(newPasswordValid);\r\n  };\r\n\r\n  const onChangeConfirmPassword = (e) => {\r\n    let newPasswordValid = false;\r\n    if (e.target.value === password) {\r\n      newPasswordValid = true;\r\n    } else {\r\n      newPasswordValid = false;\r\n    }\r\n    setConfirmPassword(e.target.value);\r\n    setConfirmPasswordValid(newPasswordValid)\r\n  };\r\n\r\n  const onChangeFirstName = (e) => {\r\n    setFirstName(e.target.value)\r\n  }\r\n  const onChangeSurname = (e) => {\r\n    setSurname(e.target.value)\r\n  }\r\n  const onChangeBirth = (e) => {\r\n    setBirth(e.target.value)\r\n  }\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center\">Sign up form</h1>\r\n      <form className=\"form-group needs-validation container-fluid\"\r\n        onSubmit={addUser}>\r\n        <div className=\"row\">\r\n        <div className=\"col-8\">\r\n            <label>First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              placeholder=\"enter first name ...\"\r\n              className=\"form-control\"\r\n              required\r\n              onChange={onChangeFirstName}\r\n            />\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <label>Surname</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Surname\"\r\n              placeholder=\"enter surname ...\"\r\n              className=\"form-control\"\r\n              required\r\n              onChange={onChangeSurname}\r\n            />\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <label>Date of Birth</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"dateOfBirth\"\r\n              className=\"form-control\"\r\n              required\r\n              onChange={onChangeBirth}\r\n            />\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"enter email ...\"\r\n              name=\"email\"\r\n              className={\r\n                emailValid ? \"form-control is-valid\" : \"form-control is-invalid\"\r\n              }\r\n              onChange={onChangeEmail}\r\n            />\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"enter password ...\"\r\n              className={\r\n                passwordValid\r\n                  ? \"form-control is-valid\"\r\n                  : \"form-control is-invalid\"\r\n              }\r\n              required\r\n              onChange={onChangePassword}\r\n            />\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <label>Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"enter password ...\"\r\n              className={\r\n                confirmPasswordValid\r\n                  ? \"form-control is-valid\"\r\n                  : \"form-control is-invalid\"\r\n              }\r\n              required\r\n              onChange={onChangeConfirmPassword}\r\n            />\r\n          </div>\r\n          <div className=\"col-8\">\r\n          <label>Select your city</label>\r\n          <Select\r\n          required\r\n          options={options}\r\n          onChange={setCity}/>\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <input\r\n              type=\"submit\"\r\n              disabled={!emailValid || !passwordValid || !confirmPasswordValid}\r\n              value=\"Inscription\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {useHistory} from 'react-router'\r\n\r\n\r\nexport default function Login() {\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    const onChangeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const connexion = (e) => {\r\n        fetch('http://localhost:8000/login', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n            })\r\n        }).then((response) => {\r\n            return response.json()\r\n        }).then((response) => {\r\n          const token = response.token;\r\n          console.log(token)\r\n          localStorage.setItem('token', token)\r\n            if (response.success === true){\r\n                history.push(\"/admin\")\r\n            }\r\n        })\r\n        e.preventDefault();\r\n    }\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center\">Login form</h1>\r\n      <form\r\n        className=\"form-group needs-validation container-fluid\"\r\n        onSubmit={connexion}>\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"enter email ...\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              required\r\n              onChange={onChangeEmail}\r\n            />\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"enter password ...\"\r\n              className=\"form-control\"\r\n              required\r\n              onChange={onChangePassword}\r\n            />\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <input\r\n              type=\"submit\"\r\n              disabled={!email || !password}\r\n              value=\"Connexion\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nexport default function Admin() {\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        console.log(token)\r\n        fetch('http://localhost:8000/admin', {\r\n            headers: {\r\n                'authorization': `bearer ${token}`,\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n            setUsers(response)\r\n            console.log(response)\r\n        })\r\n    })\r\n\r\n    return(\r\n        <>\r\n        <h1>Admin</h1>\r\n        {users.map((user) => {\r\n            return (\r\n                <>\r\n                    <p>{user.firstName}</p>\r\n                    <p>{user.surname}</p>\r\n                </>\r\n            )\r\n        })}\r\n        \r\n        </>\r\n    )\r\n    \r\n}","import React from 'react'\r\n\r\nexport default function Home() {\r\n    return(\r\n        <>\r\n            <h1>Welcome on my site</h1>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function AccountCreated() {\r\n    return(\r\n        <>\r\n        <h1>Votre compte a bien était crée</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function AccountCreated() {\r\n    return(\r\n        <>\r\n        <h1>Votre compte n'a pas pu etre crée</h1>\r\n        <Link to=\"/signup\">Sign up</Link>\r\n        </>\r\n    )\r\n}","import React from 'react'\nimport SignUp from './components/Signup'\nimport Login from './components/Login'\nimport Admin from './components/Admin'\nimport Home from './components/Home'\nimport AccountCreated from \"./Views/AccountCreated\"\nimport CreatedError from \"./Views/CreatedError\"\nimport {BrowserRouter, Switch, Route, Link} from 'react-router-dom'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default function App(){\n\n  return (\n    <BrowserRouter>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/signup\">Sign Up</Link>\n          </li>\n          <li>\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route path='/created'>\n          <AccountCreated/>\n        </Route>\n        <Route path=\"/createderror\">\n          <CreatedError/>\n        </Route>\n        <Route path='/admin'>\n          <Admin/>\n        </Route>\n        <Route path='/login'>\n          <Login/>\n        </Route>\n        <Route path='/signup'>\n          <SignUp/>\n        </Route>\n        <Route path='/'>\n          <Home/>\n        </Route>\n        <Route path='*'>\n          <Home/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}